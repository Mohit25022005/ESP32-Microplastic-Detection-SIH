version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgis/postgis:13-3.1
    container_name: microplastics_db
    environment:
      - POSTGRES_DB=microplastics
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: microplastics_redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  # MQTT Broker
  mqtt-broker:
    image: eclipse-mosquitto:2.0
    container_name: microplastics_mqtt
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - ./mqtt-config:/mosquitto/config
      - ./mqtt-config/mosquitto.conf:/mosquitto/config/mosquitto.conf
    restart: unless-stopped

  # MinIO Object Storage
  minio:
    image: minio/minio:latest
    container_name: microplastics_storage
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=admin
      - MINIO_ROOT_PASSWORD=password123
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # FastAPI Backend
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: microplastics_backend
    environment:
      - DATABASE_URL=postgresql://postgres:password123@postgres:5432/microplastics
      - REDIS_URL=redis://redis:6379
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=admin
      - MINIO_SECRET_KEY=password123
      - JWT_SECRET_KEY=your-secret-key-change-in-production
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      mqtt-broker:
        condition: service_started
      minio:
        condition: service_healthy
    volumes:
      - ./backend:/app
    restart: unless-stopped

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: microplastics_frontend
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_WS_URL=ws://localhost:8000
      - REACT_APP_MAPBOX_TOKEN=your-mapbox-token
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

  # ESP32 Device Simulator (for testing without hardware)
  esp32-simulator:
    build:
      context: ./esp32-simulator
      dockerfile: Dockerfile
    container_name: esp32_simulator
    environment:
      - MQTT_BROKER_URL=mqtt://mqtt-broker:1883
      - DEVICE_ID=sim_device_001
      - LOCATION_LAT=28.6139
      - LOCATION_LON=77.2090
    depends_on:
      - mqtt-broker
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  minio_data:

networks:
  default:
    name: microplastics_network